<Window x:Class="Chess.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Chess"
        xmlns:vm="clr-namespace:Chess.ViewModels"
        mc:Ignorable="d"
        Title="MainWindow" Height="704" Width="904" Background="#2D2D30" ResizeMode="CanResize">
    <Window.DataContext>
        <vm:ApplicationViewModel />
    </Window.DataContext>
    <Window.Resources>
        <SolidColorBrush x:Key="WhiteColor" Color="#E1C699" />
        <SolidColorBrush x:Key="BlackColor" Color="#0E1111" />
        <SolidColorBrush x:Key="TransparentWhite" Color="#FFFFFF" Opacity="0.5" />

        <Style x:Key="BoardButtonStyle">
            <Setter Property="Button.BorderThickness" Value="0"></Setter>
            <Setter Property="Button.Background" Value="Transparent"></Setter>
            <Setter Property="Button.Command" Value="{Binding ElementName=root, Path=DataContext.SquareCommand}" />
            <Setter Property="Button.CommandParameter" Value="{Binding}"></Setter>
            <Setter Property="Button.IsEnabled" Value="True"></Setter>
            <Setter Property="Button.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Button.IsMouseOver" Value="True">
                    <Setter Property="Button.Background" Value="#4169E1"></Setter>
                </Trigger>
                <Trigger Property="Button.IsPressed" Value="True">
                    <Setter Property="Button.Background" Value="Green"></Setter>
                </Trigger>
                <DataTrigger Binding="{Binding IsSelected, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}" Value="True">
                    <Setter Property="Button.Background" Value="Green"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsPossibileSquare, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}" Value="True">
                    <Setter Property="Button.Background" Value="Red"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=root, Path=DataContext.PlayerModel1.PiecesAreSelectable, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}" Value="True">
                    <Setter Property="Button.IsEnabled" Value="False"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=root, Path=DataContext.PlayerModel2.PiecesAreSelectable, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}" Value="True">
                    <Setter Property="Button.IsEnabled" Value="False"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid x:Name="root">
        <DockPanel>
            <Menu DockPanel.Dock="Top">
                <MenuItem Header="Import TXT" Command="{Binding ImportTxtCommand}"></MenuItem>
                <MenuItem Header="Import XML" Command="{Binding ImportXmlCommand}"></MenuItem>
                <MenuItem Header="Export Board (XML)" Command="{Binding ExportXmlCommand}"></MenuItem>
            </Menu>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Border Background="#FF2C1D0D" BorderBrush="Black" BorderThickness="2" Width="450" Height="450">
                    <Border.Style>
                        <Style>
                            <Setter Property="TextBox.Foreground" Value="White"></Setter>
                            <Setter Property="TextBox.FontWeight" Value="Bold"></Setter>
                        </Style>
                    </Border.Style>
                    <Grid>
                        <Grid Width="400" VerticalAlignment="Top" HorizontalAlignment="Left" Height="25" Margin="25 0 0 0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="50"></ColumnDefinition>
                                <ColumnDefinition Width="50"></ColumnDefinition>
                                <ColumnDefinition Width="50"></ColumnDefinition>
                                <ColumnDefinition Width="50"></ColumnDefinition>
                                <ColumnDefinition Width="50"></ColumnDefinition>
                                <ColumnDefinition Width="50"></ColumnDefinition>
                                <ColumnDefinition Width="50"></ColumnDefinition>
                                <ColumnDefinition Width="50"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">A</TextBlock>
                            <TextBlock Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center">B</TextBlock>
                            <TextBlock Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center">C</TextBlock>
                            <TextBlock Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center">D</TextBlock>
                            <TextBlock Grid.Column="4" HorizontalAlignment="Center" VerticalAlignment="Center">E</TextBlock>
                            <TextBlock Grid.Column="5" HorizontalAlignment="Center" VerticalAlignment="Center">F</TextBlock>
                            <TextBlock Grid.Column="6" HorizontalAlignment="Center" VerticalAlignment="Center">G</TextBlock>
                            <TextBlock Grid.Column="7" HorizontalAlignment="Center" VerticalAlignment="Center">H</TextBlock>
                        </Grid>
                        <Grid Width="25" HorizontalAlignment="Left" Height="400" VerticalAlignment="Top" Margin="0 25 0 0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="50"></RowDefinition>
                                <RowDefinition Height="50"></RowDefinition>
                                <RowDefinition Height="50"></RowDefinition>
                                <RowDefinition Height="50"></RowDefinition>
                                <RowDefinition Height="50"></RowDefinition>
                                <RowDefinition Height="50"></RowDefinition>
                                <RowDefinition Height="50"></RowDefinition>
                                <RowDefinition Height="50"></RowDefinition>
                            </Grid.RowDefinitions>
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">8</TextBlock>
                            <TextBlock Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center">7</TextBlock>
                            <TextBlock Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Center">6</TextBlock>
                            <TextBlock Grid.Row="3" HorizontalAlignment="Center" VerticalAlignment="Center">5</TextBlock>
                            <TextBlock Grid.Row="4" HorizontalAlignment="Center" VerticalAlignment="Center">4</TextBlock>
                            <TextBlock Grid.Row="5" HorizontalAlignment="Center" VerticalAlignment="Center">3</TextBlock>
                            <TextBlock Grid.Row="6" HorizontalAlignment="Center" VerticalAlignment="Center">2</TextBlock>
                            <TextBlock Grid.Row="7" HorizontalAlignment="Center" VerticalAlignment="Center">1</TextBlock>
                        </Grid>

                        <WrapPanel Margin="25 25 0 0">
                            <Border BorderBrush="Black" BorderThickness="1">
                                <ItemsControl ItemsSource="{Binding Chess.Board.Squares}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <WrapPanel Width="400" />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Width="50" Height="50">
                                                <Grid.Style>
                                                    <Style>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Color, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}" Value="White">
                                                                <Setter Property="Grid.Background" Value="#FFE2C5A8"></Setter>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Color, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}" Value="Black">
                                                                <Setter Property="Grid.Background" Value="#FF765739"></Setter>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Grid.Style>
                                                <!--<ContentPresenter Grid.Row="0" Style="{StaticResource PiecePresenter}" Content="{Binding}"/>-->
                                                <Button Style="{StaticResource BoardButtonStyle}">
                                                    <Image Width="50" Height="50" Source="{Binding Piece.Image, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}"></Image>
                                                </Button>
                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </Border>
                        </WrapPanel>
                    </Grid>
                </Border>
                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <local:PlayerView DataContext="{Binding PlayerModel2}" Background="#FF787878" Margin="20 20 20 20" />
                    <local:PlayerView DataContext="{Binding PlayerModel1}" Background="#FF787878" Margin="20 20 20 20" Grid.Row="1" />
                </Grid>
            </Grid>
        </DockPanel>
        <local:GameOverView Background="{StaticResource TransparentWhite}">
            <local:GameOverView.Style>
                <Style TargetType="local:GameOverView">
                    <Setter Property="Visibility" Value="Visible"></Setter>
                    <Setter Property="DataContext" Value="{Binding GameOverModel}"></Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Hidden"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </local:GameOverView.Style>
        </local:GameOverView>
    </Grid>
</Window>